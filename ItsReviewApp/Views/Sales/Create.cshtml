@model ItsReviewApp.ViewModels.LeadViewModel

@{
    ViewBag.Title = "Create";
}
<!DOCTYPE html>
<html>
<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <style>
        .error {
            display: none;
        }

        .chosen-container {
            width: 100% !important;
        }

        .select2-results__option {
            padding-right: 20px;
            vertical-align: middle;
        }

            .select2-results__option:before {
                content: "";
                display: inline-block;
                position: relative;
                height: 20px;
                width: 20px;
                border: 2px solid #e9e9e9;
                border-radius: 4px;
                background-color: #fff;
                margin-right: 20px;
                vertical-align: middle;
            }

            .select2-results__option[aria-selected=true]:before {
                font-family: fontAwesome;
                content: "\f00c";
                color: #fff;
                background-color: #f77750;
                border: 0;
                display: inline-block;
                padding-left: 3px;
            }

        .ui-widget-header {
            border: 0px !important;
            background: #f9f9f9 !important;
            color: #251f1f;
        }

            ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default, .ui-button, html .ui-button.ui-state-disabled:hover, html .ui-button.ui-state-disabled:active {
                font-weight: bold !important;
            }

        /*     #ui-datepicker-div {
            top: 778.137px !important;
        }*/
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="header">
            <h5 style="color:#fff;margin-right: 40px;">ItsReview App</h5>
        </div>
        <div class="container" style="padding-top:30px;">
            <div class="row col-md-12" style="margin-left:-30px!important">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="clientName">Client Name</label>
                        <input type="text" class="form-control" placeholder="Enter Name" id="clientname">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <span class="error" style="color:red;">Required</span>
                        <input type="text" class="form-control" placeholder="Enter Number" id="phonenumber" name="phonenumber" onchange='PhoneNumberValidation(this)' maxlength="10" />

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="country">Select Country</label>
                        <select name="dropdowncountry" id="country" class="form-control dropdowncountry"></select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-dark" id="newrows"><b>Add More Url Listing</b></button>
                <div style="padding-top:10px;" class="table-responsive-sm">
                    <table class="table table-bordered" id="tblSales">
                        <thead>
                        </thead>
                        <tbody class="ReviewTableClass">
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <label for="remarks">Remarks</label>
                    <span class="error" style="color:red;">Required</span>
                    <textarea rows="5" cols="3" id="remarkid" class="form-control" onfocusout="CheckRequiredField(this)"></textarea>

                </div>
                <div class="form-group">
                    <label for="date">FollowUp Date</label>
                    <div class='input-group date followupDate'>
                        <input type='text' class="form-control" id="followupdate" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    <input type="checkbox" class="form-check-input" id="followupcheck" checked>
                    <label class="form-check-label" for="followupcheck">Save to FollowUp List</label>
                </div>
                <button type="submit" onclick="location.href='@Url.Action("Index", "Sales")'" class="btn btn-primary" id="btnBack">Back</button>
                <button type="submit" class="btn btn-primary" id="btnsave">Save</button>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#LeadModal">Create Lead</button>
                <button type="button" class="btn btn-primary" data-toggle="modal" onclick="BindLead();" data-target="#LeadModalId">Lead Data</button>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#LeadModalId">Lead</button>
            </div>

            <!-- Create Lead -->
            <div class="modal fade" id="LeadModal" tabindex="-1" role="dialog" aria-labelledby="LeadModalLabel" aria-hidden="true" style="padding-top:50px;">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="clientname">Sales Name</label>
                                @Html.DropDownList("ClientName", (IEnumerable<SelectListItem>)ViewBag.Client, "-- Select Client --", new { @class = "form-control clientname" })
                            </div>
                            <div class="form-group">
                                <label for="companyname">Company Name</label>
                                @*<input type="text" class="form-control" placeholder="Enter Compnay Name" id="companyname">*@
                                @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", @id = "companyname" })
                            </div>
                            <div class="form-group">
                                <label for="noofreview">No. Of Review</label>
                                @Html.TextBoxFor(m => m.NumberOfReview, new { @class = "form-control", @id = "noofreview" })
                            </div>
                            <div class="form-group">
                                <label for="rating">Rating</label>
                                @Html.TextBoxFor(m => m.Rating, new { @class = "form-control", @id = "rating" })
                            </div>
                            <div class="form-group">
                                <label for="niche">Niche</label>
                                @Html.TextBoxFor(m => m.NicheName, new { @class = "form-control", @id = "niche" })
                            </div>
                            <div class="form-group">
                                <label for="url">URL</label>
                                @Html.TextBoxFor(m => m.Url, new { @class = "form-control", @id = "url" })
                            </div>
                            <div class="form-group">
                                <label for="City">City</label>
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control", @id = "City" })
                            </div>
                            <div class="form-group">
                                <label for="listing">Select Listing</label>
                                @*<select name="dropdownlisting" id="listing" class="form-control dropdownlisting"></select>*@
                                @Html.DropDownList("Listing", (IEnumerable<SelectListItem>)ViewBag.Listing, "-- Select List --", new { @class = "form-control", @id = "listing" })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="btnsavemodel" data-dismiss="modal">Save</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lead Data-->
            <div class="modal fade" id="LeadModalId" tabindex="-1" role="dialog" aria-labelledby="LeadModalLabel" aria-hidden="true" style="padding-top:50px;">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="container" style="margin-top: 30px; max-width:585px;">
                                <div class="form-group">
                                    <table id="LeadModalDataId" class="table table-bordered table-responsive">
                                        <thead>
                                            <tr>
                                                <th>CompanyName</th>
                                                <th>NumberOfReview</th>
                                                <th>NicheName</th>
                                                <th>City</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</body>
</html>


<script type="text/javascript">

    //$('#followupdate').datepicker({
    //    minDate: 0,
    //});
    var getid = 0;
    var categoryList = new Array();
    $(document).ready(function () {
        /*BindLead();*/
        var url=window.location.search.split("=")[1]
        if (url != undefined && url != "") {
            GetDataById(url);
        }
        else {
            BindCountry(5);
            categoryList = new Array();
            SetDefaultCategory();
            for (i = 0; i < 2; i++) {
                tblBind("1", "", "", "", "", "", "", "", "1", null, "", "", "0", "" , categoryList,"0","");
            }
        }

    })
    var count = 0;
    $("#newrows").click(function () {
        categoryList = new Array();
        SetDefaultCategory();
        tblBind("1", "", "", "", "", "", "", "", "1", null, "", "", "0", "", categoryList,"0","");
    });
    function tblBind(NicheName, CompanyName, CityName, ListingURL, CurrentReview, EmailType, ReviewPerDay, RatePerReview, Platform, ReviewDate, OldBalance, CurrentBalance, Status, CategoryId,CategoryList,SalesDetailId,Address) {
        var addcontrols = "<tr id=\"RowId_" + count + "\">" + count + ">"
        addcontrols += '<td>' +
            '<div class="top_row">' +
            '<div><input type="hidden" class="form-control hiddensalesdetailid" value="' + SalesDetailId + '" /></div>' +
            '<div><select class="dropdownclass form-control dropdownNiche" name="dropdownNiche"></select></div>' +
            '<div><input type="text" placeholder="Company Name" class="form-control companyname" title="' + CompanyName + '" value="' + CompanyName +'" style="width: 370px;" onkeyup="CompanyToolTip(this)" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +
        /*'<div><select class="dropdownclass form-control dropdownCity" name="dropdownCity" id="citydropdown"></select></div>' +*/
            '<div><input type="text" placeholder="City Name" class="form-control cityname" value="' + CityName + '" id="cityname" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +

            '<div style="display:flex;">' +
            '<input type="text" class="form-control listingurls" placeholder="Url Listing" value="' + ListingURL +'"/>' +
            '<a class="btn btn-primary btn-sm listingbutton" target="_blank" href="' + ListingURL +'" style="margin-left:7px;">GO</a>' +
            '</div><span class="error" style = "color:red;"> Required</span>' +
            '<div><input type="text" placeholder="Cur/Rev" class="form-control currentreview" value="' + CurrentReview +'" style="width: 70px;" Id="currentreview" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +
           /* '<div><input type="text" placeholder="Email Type" class="form-control emailtype" value="' + EmailType +'" /></div>' +*/
            '<div><input type="text" placeholder="Rev/day" class="form-control reviewperrday" id="reviewperrday" value="' + ReviewPerDay +'" style="width: 70px;" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +
            '<div><input type="text" placeholder="Rate/Rev" class="form-control rateperreview" id="rateperreview" value="' + RatePerReview +'" style="width: 70px;" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +
            '</div>' +
            '<div class="top_row">' +
            '<div><select class="form-control dropdownPaltform chzn-select" name="dropdownPaltform"></select></div>' +
            '<div class="datepicker">' +
            '<div class="input-group date example1">' +
            '<input type="text" class="input-group date form-control reviewdate" value="' + ReviewDate +'" />' +
                '<span class="input-group-addon">' +
                '<span class="glyphicon glyphicon-calendar"></span>' +
                '</span>' +
            '</div>' +
            '<span class="error" style="color:red;">Required</span></div>' +
            '<div><input type="text" placeholder="Old Balance" class="form-control oldbalance" value="' + OldBalance +'" /></div>' +
            '<div><input type="text" placeholder="Current Balance" class="form-control currentbalance" value="' + CurrentBalance +'" /></div>' +
            '<div><select class="form-control dropdownStatus" name="dropdownStatus"></select></div>' +
            '<div><select data-placeholder="Select Category" class="form-control dropdownCategory" id="dropdownCategory" name="dropdownCategory" multiple="multiple"></select></div>' +
            '<div><input type="text" placeholder="Address" class="form-control cls-Address" id="address" value="' + Address + '" onfocusout="CheckRequiredField(this)"/><span class="error" style="color:red;">Required</span></div>' +
            '</div>' +
            '</td>';
        addcontrols += "</tr>";
        $("table .ReviewTableClass").append(addcontrols);
        BindNiche("RowId_" + count,NicheName);
        /*BindCity("RowId_" + count, CityName);*/
        BindPaltform("RowId_" + count, Platform);
        BindStatus("RowId_" + count, Status);
        Bindcategory("RowId_" + count, CategoryId, CategoryList);
       /* GetSelectedValues("RowId_" + count, SalesdetailList);*/
        datetime();
        MultiSelectChckBox();

        count++;
    }
    function GetDataById(id) {
        $.ajax({
            url: '@Url.Action("GetDataById", "Sales")?Id=' + id,
            type: "GET",
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    getid = id;
                    var sales = data.saleslist[0];
                    $('#clientname').val(sales.ClientName);
                    $('#phonenumber').val(sales.PhoneNumber);
                    $('#remarkid').val(sales.Remarks);

                     BindCountry(sales.CountryName);
                      if (sales.FollowUpDate != null) {
                          var followUpDate = new Date(parseInt(sales.FollowUpDate.substr(6)));
                          var followDate = formatDate(followUpDate)
                          $('#followupdate').val(followDate);
                      }
                      $("#tblSales tbody").html('');
                    $.each(data.detailslist, function (index, item) {
                              if (item.ReviewDate != null) {
                                  var reviewDate = new Date(parseInt(item.ReviewDate.substr(6)));
                                  item.ReviewDate = formatDate(reviewDate);
                              }
                              var categoryList = data.categorylist.filter(function (e)
                              { return e.SalesdetailId == item.Id })

                              Object.keys(item).map(function (key, index) {
                                  if (item[key] == null || item[key] == "null") {
                                      item[key] = "";
                                  }
                              });
                             tblBind(item.NicheName, item.CompanyName, item.CityName, item.ListingUrl, item.CurrentReview, item.EmailType, item.ReviewsPerDay, item.RatePerReview, item.Platform, item.ReviewDate, item.OldBalance, item.CurrentBalance, item.Status, item.CategoryId, categoryList, item.Id, item.Address);
                      });
                  }

            }
        })
    }
    function BindCountry(id) {
        $.ajax({
            url: "@Url.Action("GetCountry", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {

                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    $('.dropdowncountry').append(opt);

                });
                $(".dropdowncountry").val(id);
                $(".dropdowncountry").chosen();
            }
        })
    }
    function BindCity(id, selectedId) {

        $.ajax({
            url: "@Url.Action("GetCity", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {

                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    if (id == 0) {
                        $('.dropdownCity').append(opt);
                    }
                    else {
                        $("#tblSales").find("tr#" + id).find(".dropdownCity").append(opt);

                    }

                });
                $("#tblSales").find("tr#" + id).find(".dropdownCity").val(selectedId);
                $("#tblSales").find("tr#" + id).find(".dropdownCity").chosen();
            }
        })
    }
    function BindNiche(id, selectedId) {
        $.ajax({
            url: "@Url.Action("GetNiche", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {
                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    if (id == 0) {
                        $('.dropdownNiche').append(opt);
                    }
                    else {
                        $("#tblSales").find("tr#" + id).find(".dropdownNiche").append(opt);
                    }

                });
                $("#tblSales").find("tr#" + id).find(".dropdownNiche").val(selectedId);
                $("#tblSales").find("tr#" + id).find(".dropdownNiche").chosen();
            }
        })
    }
    function BindStatus(id, selectedId) {
        $.ajax({
            url: "@Url.Action("Status", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {
                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    if (id == 0) {
                        $('.dropdownStatus').append(opt);
                    }
                    else {
                        $("#tblSales").find("tr#" + id).find(".dropdownStatus").append(opt);
                    }

                });
                $("#tblSales").find("tr#" + id).find(".dropdownStatus").val(selectedId);
                $("#tblSales").find("tr#" + id).find(".dropdownStatus").chosen();
            }
        })
    }
     function BindPaltform(id, selectedId) {

        $.ajax({
            url: "@Url.Action("GetPaltform", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {

                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    if (id == 0) {
                        $('.dropdownPaltform').append(opt);
                    }
                    else {
                        $("#tblSales").find("tr#" + id).find(".dropdownPaltform").append(opt);
                    }

                });
                $("#tblSales").find("tr#" + id).find(".dropdownPaltform").val(selectedId);
                $("#tblSales").find("tr#" + id).find(".dropdownPaltform").chosen();


            }
        })
    }
    $('#btnsave').click(function () {
        $('#btnsave').prop("disabled", true);
        var getvalue = getid;
        var clientname = $("#clientname").val();
        var phoneNumber = $("#phonenumber").val();
        var Remarks = $("#remarkid").val();
        var followup = $("#followupdate").val();
        var country = $("#country").val();
        var followupcheck = $('#followupcheck').is(':checked');
        if (followupcheck == true) {
            if (followup.length == 0) {
                alert("please select follow up date");
                return;
            }
        }
        if (phoneNumber.length == 0 || Remarks.length == 0) {
            return;
        }
        var Reviews = new Array();
        var exit = false;
        $("#tblSales tbody tr").each(function () {
            var row = $(this);
            var Review = {};
            Review.NicheName = row.find(".dropdownNiche").val();
            Review.CompanyName = row.find(".companyname").val();
            Review.CityName = row.find(".cityname").val();
            Review.ListingUrl = row.find(".listingurls").val();
            Review.CurrentReview = row.find(".currentreview").val();
            Review.EmailType = row.find(".emailtype").val();
            Review.ReviewsPerDay = row.find(".reviewperrday").val();
            Review.RatePerReview = row.find(".rateperreview").val();
            Review.Platform = row.find(".dropdownPaltform").val();
            Review.ReviewDate = row.find(".reviewdate").val();
            Review.OldBalance = row.find(".oldbalance").val();
            Review.CurrentBalance = row.find(".currentbalance").val();
            Review.Status = row.find(".dropdownStatus").val();
            Review.CategoryViewModel = row.find(".dropdownCategory").val();
            Review.Id = row.find(".hiddensalesdetailid").val();
            Review.Address = row.find(".cls-Address").val();
            if (row.find(".companyname").val() != "") {
                Reviews.push(Review);

                if (Review.CompanyName.length == 0 || Review.CityName.length == 0 || Review.ListingUrl.length == 0 || Review.CurrentReview.length == 0 || Review.ReviewsPerDay.length == 0 || Review.RatePerReview.length == 0 || Review.CategoryViewModel.length == 0 || Review.Address.length == 0 || Review.ReviewDate == null) {
                    exit = true;
                    return
                }
            }


        });
        if (exit) {
            return;
        }
        var writeobject = new Object();
        writeobject.Id = getvalue,
        writeobject.ClientName = clientname,
        writeobject.PhoneNumber = phoneNumber,
        writeobject.FollowUpDate = followup,
        writeobject.CountryName = country,
        writeobject.SalesDetailsViewModel = Reviews;
        writeobject.Remarks = Remarks;
        writeobject.FollowUpCheck = followupcheck;
        $.ajax({
            url: "@Url.Action("Create", "Sales")",
            contentType: 'application/json',
            data: JSON.stringify(writeobject),
          /*  dataType: "json",*/
            type: "POST",
            success: function (result) {
                if (result != 0) {
                    alert("Company Already Exists : \n" + result.toString().replaceAll(",", "\n"));
                }
                else {
                    alert('success');
                }
                ResetSalesData();

            },
            error: function (result) {
                alert('failure');
            }
        });
    });
    function datetime() {
        $('.example1').datepicker({
            autoclose: true,
            format: "yyyy/mm/dd",
            orientation: 'bottom',
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down"
            }
        });

        var dateToday = new Date();
        $('.followupDate').datepicker({
            /*startDate: dateToday,*/
            startDate: dateToday,
            autoclose: true,
            format: "yyyy/mm/dd",
            orientation: 'bottom',
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down"
            }
        });
    }
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        return [year, month, day].join('-');
    }

    $(document).on("focusout", ".listingurls", function () {
        var linkURL = $(this).closest('td').find('.listingurls').val();
        $(this).closest('td').find('.listingbutton').attr('href', linkURL);
    })
    function Bindcategory(id, selectedId, categoryList) {
        $.ajax({
            url: "@Url.Action("GetCategory", "Sales")",
            type: "GET",
            dataType: "json",
            success: function (data) {

                $.each(data, function (index, item) {
                    var opt = new Option(item.Text, item.Value);
                    if (id == 0) {
                        $('.dropdownCategory').append(opt);
                    }
                    else {
                        $("#tblSales").find("tr#" + id).find(".dropdownCategory").append(opt);
                    }
                });
                $("#tblSales").find("tr#" + id).find(".dropdownCategory").val(selectedId);
                if (categoryList != undefined && categoryList != null && categoryList.length > 0) {
                    $.each(categoryList, function (index, item) {
                        $("#tblSales").find("tr#" + id).find(".dropdownCategory option[value='" + item.CategoryId + "']").prop("selected", true);
                    });
                    $("#tblSales").find("tr#" + id).find(".dropdownCategory").select2().trigger('change');
                }
            }
        })
    }
    function MultiSelectChckBox() {
        $(".dropdownCategory").select2({
            closeOnSelect: false,
           /* allowClear: true,*/
            tags: true
        });
    }

    $('#btnsavemodel').click(function () {
        var clientname = $(".clientname option:selected").val();
        var companyname = $("#companyname").val();
        var noofreview = $("#noofreview").val();
        var rating = $("#rating").val();
        var niche = $("#niche").val();
        var url = $("#url").val();
        var City = $("#City").val();
        var dropdownlisting = $("#listing option:selected").val();

        var writeobject = new Object();
        writeobject.SalesId = clientname,
        writeobject.CompanyName = companyname,
        writeobject.NumberOfReview = noofreview,
        writeobject.Rating = rating,
        writeobject.NicheName = niche,
        writeobject.Url = url;
        writeobject.City = City;
        writeobject.Listing = dropdownlisting;
        $.ajax({
            url: "@Url.Action("LeadCreate", "Sales")",
            contentType: 'application/json',
            data: JSON.stringify(writeobject),
          /*  dataType: "json",*/
            type: "POST",
            success: function (result) {
                ResetLeadData();
                alert('success');
            },
            error: function (result) {
                alert('failure');
            }
        });

    })

    function BindLead() {

        $.ajax({
            url: "BindLeadData/Sales",
            type: "GET",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if ($.fn.DataTable.isDataTable('#LeadModalDataId')) {
                    $('#LeadModalDataId').DataTable().destroy();
                }

               // $('#LeadModalDataId tbody').empty();

                $('#LeadModalDataId').dataTable({
                    /* destroy: true,*/
                    data: data,
                    "columns": [
                        { "data": "CompanyName" },
                        { "data": "NumberOfReview" },
                        { "data": "NicheName" },
                        { "data": "City" },
                        {
                            render: function (data, type, row) {

                                return '<button class="btn btn-primary" data-city="' + row.City + '" data-CompanyName="' + row.CompanyName + '" data-Listing="' + row.Listing + '" data-NicheName="' + row.NicheName + '" data-NumberOfReview="' + row.NumberOfReview + '" data-Rating="' + row.Rating + '" data-SalesId="' + row.SalesId + '" data-Url="' + row.Url +'" onClick="BindCompany(this);" type="submit" data-dismiss="modal">OPEN</button>';
                            }
                        },
                        /*{ "defaultContent": '<button class="btn-view" type="submit" data-dismiss="modal">OPEN</button>' }*/

                    ],
                });

            }
        })
    }

    $('#LeadModalDataId tbody').on('click', '.btn-view', function (e) {
        //$("#LeadModalId").modal("hide");

        var currentRow = $(this).closest("tr");
        var col1 = currentRow.find("td:eq(0)").text();
        var col2 = currentRow.find("td:eq(1)").text();
        var col3 = currentRow.find("td:eq(2)").text();
        var col4 = currentRow.find("td:eq(3)").text();


        var NicheName = $("#tblSales tbody tr td:eq(0)").find(".dropdownNiche option:selected").text(col3);
        $("#tblSales tbody tr td:eq(0)").find(".dropdownNiche option:selected").trigger('chosen:updated');

        //$("#tblSales tbody tr td:eq(0)").find(".dropdownNiche").val(col3); // Select the option with a value of '1'
        //$("#tblSales tbody tr td:eq(0)").find(".dropdownNiche").trigger('change');

        var city = $("#tblSales tbody tr td:eq(0)").find(".dropdownCity option:selected").text(col4);
        $("#tblSales tbody tr td:eq(0)").find(".dropdownCity option:selected").trigger('chosen:updated');

        var CompanyName = $("#tblSales tbody tr td:eq(0)").find(".companyname").val(col1);
    });

    function BindCompany(row) {
        var city = $(row).attr("data-city");
        var companyname = $(row).attr("data-companyname");
        var listing = $(row).attr("data-listing");
        var nichename = $(row).attr("data-nichename");
        var numberofreview = $(row).attr("data-numberofreview");
        var rating = $(row).attr("data-rating");
        var salesid = $(row).attr("data-salesid");
        var url = $(row).attr("data-url");
        categoryList = new Array();
        SetDefaultCategory();
        $("#tblSales tbody").html('');
        tblBind(nichename, companyname, city, url, "", "", numberofreview, rating, "1", null, "", "", "0", "", categoryList, "", "");
    }

    $("#clientname").on("keyup", function () {
        $('#btnsave').prop("disabled", false);
    });
    function SetDefaultCategory() {
        var obj1 = { CategoryId: '1' }
        categoryList.push(obj1);
        var obj5 = { CategoryId: '5' }
        categoryList.push(obj5);
        var obj6 = { CategoryId: '6' }
        categoryList.push(obj6);
    }

    function ResetSalesData() {
       $("#clientname").val('');
       $("#phonenumber").val('');
       $("#remarkid").val('');
        $("#followupdate").val('')
        BindCountry(5);
        categoryList = new Array();
        $("#tblSales tbody").html('');
        SetDefaultCategory();
        for (i = 0; i < 2; i++) {
            tblBind("1", "", "", "", "", "", "", "", "1", null, "", "", "0", "", categoryList, "0", "");
        }
    }

    function ResetLeadData() {
        $(".clientname").val('');
        $("#companyname").val('');
        $("#noofreview").val('');
        $("#rating").val('');
        $("#niche").val('');
        $("#url").val('');
        $("#City").val('');
        $("#listing").val('')
    }

    function CompanyToolTip(companyName){
        $(companyName).attr('title', $(companyName).val())
    }

    function PhoneNumberValidation(number) {
        var phoneNumber = number.value;
        var id = getid;

        if (phoneNumber == null || phoneNumber == "") {
            return;
        }
        if (id == 0) {
            $.ajax({
                url: "@Url.Action("GetPhoneNumber", "Sales")",
                contentType: 'application/json',
                data: { "phoneNumber": phoneNumber, "id": id },
                type: "GET",
                success: function (data) {
                    if (data.toUpperCase() == "TRUE") {
                        number.value = "";
                        alert('Phone Number already exists');
                        $("#phonenumber").closest("div").find(".error").show();
                    }
                    else {
                        $("#phonenumber").closest("div").find(".error").css("display", "none")
                    }

                },
                error: function (data) {
                    alert('failure');
                }
            });
        }
        else {
             $.ajax({
                url: "@Url.Action("GetPhoneNumber", "Sales")",
                contentType: 'application/json',
                data: { "phoneNumber": phoneNumber , "id" : id},
                type: "GET",
                    success: function (data) {
                    if (data.toUpperCase() == "TRUE") {
                       return
                    }
                    else {
                        number.value = "";
                        alert('Phone Number already exists');
                        }

                },
                error: function (data) {
                    alert('failure');
                }
             });
        }
    }

    function CheckRequiredField(name) {
        var detail = name.value;
        if (detail == null || detail == "") {
            $(name).parent().closest("div").find(".error").css("display", "block");
        }
        else {
            $(name).parent().closest("div").find(".error").css("display", "none");
        }
    }

    $(document).on("focusout", ".reviewdate", function (name) {
        if (name.target.value == null || name.target.value == "") {
            $(name.target).parent().closest("div.datepicker").find(".error").css("display", "block");
        }
        else {
            $(name.target).parent().closest("div.datepicker").find(".error").css("display", "none");
        }
    })

</script>
